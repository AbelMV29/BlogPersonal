@using BlogPersonal.Models.View
@model PostViewModel
@{
    ViewData["Title"] = Model.Title;
}

<div class="mx-[60px] my-[50px] gap-[30px] flex flex-col 2xl:mx-[300px]">
    <img class="h-[150px] blur-[1px] w-full" src="@Model.PreviewImage"/>
    <div class="inter-bold flex flex-row items-center justify-between">
        <h1 class="text-[32px] text-[var(--primary-color)]">@Model.Title</h1>
        <span class="text-[var(--link-color)] text-[18px]">@Model.CategoryName - @Model.PublishDate</span>
    </div>
    
    <p class="text-white">@Model.ShortDescription</p>
    <div class="h-[1px] w-full bg-white"></div>
    <div class="CdkContent transition-[1s] w-full text-white">
        @Html.Raw(Model.Body)
    </div>
    <h3 class="inter-bold text-[32px] text-white">Seccion de Comentarios</h3>
    <div class="bg-[var(--secondary-body-color)] gap-[15px] p-[30px] flex flex-col">
        @if(User.Identity.IsAuthenticated)
        {
            <form method="post" enctype="multipart/form-data" class="gap-[15px] flex flex-col" id="commentForm">
                <input type="hidden" name="IdPost" value="@Model.Id"/>
                <textarea placeholder="Escribe un comentario" class="text-[16px] px-[10px] py-[14px] border-2 bg-[var(--secondary-body-color)] rounded-[6px] w-full resize-none border-white text-gray-400" name="Body" rows="5"></textarea>
                <div class="flex flex-row justify-between">
                    <input accept="image/*" class="w-[50%] text-[16px] px-[10px] py-[14px] border-2 bg-[var(--secondary-body-color)] rounded-[6px] border-white text-gray-400" type="file" name="MediaUrl" />
                    <button class="text-[16px] bg-[var(--primary-color)] px-[35px] py-[6.5px] inter-bold transition-[1s] rounded-md text-white hover:bg-[var(--secondary-color)]" type="submit">Comentar</button>
                </div>
                
            </form>
        }
        else
        {
            <span class="inter-bold text-white">Para comentar debe <a asp-action="Login" asp-route-returnUrl="/Post/@Model.Id" asp-controller="Account" class="text-[var(--primary-color)] transition-[.5s] hover:text-[var(--secondary-color)]">iniciar sesión</a></span>
        }
        @if (Model.Comments is null || Model.Comments.Count == 0)
        {
            <span class="text-red-500">No hay comentarios</span>
        }
        else
        {
            <div id="contentComments" class="gap-[15px] flex flex-col">
                @foreach(var item in Model.Comments)
            {
                <div class="gap-[15px] flex flex-col">
                    <div class="flex flex-row justify-between">
                        <h4 class="text-[var(--primary-color)] inter-bold">@item.FullName</h4>
                        <p class="text-[var(--link-color)] inter-bold">@item.PublishDate</p>
                    </div>
                    <p class="text-white">@item.Body</p>
                    @if(item.MediaUrl is not null)
                    {
                            <img src="@item.MediaUrl" class="w-[50%] rounded-[6px]" />
                    }
                    <hr class="opacity-30"/>
                </div>
            }
            </div>
            
        }
    </div>
</div>
<script>
    const commentForm = document.getElementById('commentForm');
    const commentContainer = document.getElementById('contentComments');
    commentForm.addEventListener('submit',(event)=>
    {
        event.preventDefault();
        const formData = new FormData(commentForm);
        fetch("/comment",
        {
            method:'Post',
            body:formData,
        })
        .then(response=>response.json())
        .then(item=>
            {
                console.log(item)
                const commentDiv = document.createElement('div');
                commentDiv.className = 'gap-[15px] flex flex-col';

                // Crear la fila superior
                const rowDiv = document.createElement('div');
                rowDiv.className = 'flex flex-row justify-between';

                // Crear y agregar el nombre completo
                const nameElement = document.createElement('h4');
                nameElement.className = 'text-[var(--primary-color)] inter-bold';
                nameElement.textContent = item.fullName; // No necesita escapado

                // Crear y agregar la fecha de publicación
                const dateElement = document.createElement('p');
                dateElement.className = 'text-[var(--link-color)] inter-bold';
                dateElement.textContent = item.publishDate; // No necesita escapado

                rowDiv.appendChild(nameElement);
                rowDiv.appendChild(dateElement);
                commentDiv.appendChild(rowDiv);

                const bodyElement = document.createElement('p');
                bodyElement.className = "text-white"
                bodyElement.textContent = item.body; // Escapar HTML en el cuerpo
                commentDiv.appendChild(bodyElement);

                if (item.mediaUrl) {
                    const imgElement = document.createElement('img');
                    imgElement.src = item.mediaUrl;
                    imgElement.className = 'w-[50%] rounded-[6px]';
                    commentDiv.appendChild(imgElement);
                }

            commentContainer.prepend(commentDiv);
            }
        );

    })
    console.log(document.URL)
</script>